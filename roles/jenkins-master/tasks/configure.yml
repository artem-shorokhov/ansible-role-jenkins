---

- name: set jenkins home directory
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    regexp: '^JENKINS_HOME=.*'
    line: JENKINS_HOME="{{ jenkins_home }}"
  register: jenkins_home_config

- name: ensure jenkins_home {{ jenkins_home }} exists
  file:
    path: "{{ jenkins_home }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775

- name: ensure init scripts directory exists
  file:
    path: "{{ jenkins_home }}/init.groovy.d"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775

- name: set jenkins command line options
  lineinfile:
    dest: "{{ jenkins_init_file }}"
    regexp: '^JENKINS_JAVA_OPTIONS=.*'
    line: JENKINS_JAVA_OPTIONS="{{ jenkins_java_opts }}"
  register: jenkins_java_options_config

- name: ensure node directory exists
  file:
    path: "{{ jenkins_home }}/nodes/{{ jenkins_slave_name }}"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0775
  
- name: configure {{ jenkins_slave_name }} node
  template:
    src: config.xml
    dest: "{{ jenkins_home }}/nodes/{{ jenkins_slave_name }}/config.xml"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0664
  register: jenkins_nodes_config

- name: restart jenkins to apply changes
  service:
    name: jenkins
    state: restarted
  when: jenkins_users_config is defined and jenkins_users_config.changed or
        jenkins_home_config.changed or
        jenkins_java_options_config.changed or
        jenkins_nodes_config.changed

- name: remove jenkins security init scripts after first startup
  file:
    path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
    state: absent
